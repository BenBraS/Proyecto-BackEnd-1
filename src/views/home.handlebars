<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <script>
        // Función para obtener el ID del carrito desde el almacenamiento local
        function getCartId() {
            return localStorage.getItem('cartId');
        }

        // Función para guardar el ID del carrito en el almacenamiento local
        function setCartId(cartId) {
            localStorage.setItem('cartId', cartId);
        }
            // Función para mostrar los productos del carrito
        async function showCartProducts() {
            const cartId = getCartId();
            if (!cartId) {
                alert('No hay un carrito seleccionado.');
                return;
            }

            try {
                const response = await fetch(`/api/carts/${cartId}/products`);
                const products = await response.json();
                
                const cartTableBody = document.getElementById('cart-products');
                cartTableBody.innerHTML = ''; // Limpiar el contenido anterior

                products.forEach(product => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${product.productId.title}</td>
                        <td>${product.productId.description}</td>
                        <td>${product.productId.code}</td>
                        <td>${product.productId.price}</td>
                        <td>${product.quantity}</td>
                    `;
                    cartTableBody.appendChild(row);
                });
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Inicializar carrito al cargar la página
        document.addEventListener('DOMContentLoaded', () => {
            // Verificar si ya hay un carrito en el almacenamiento local
            if (!getCartId()) {
                createCart(); // Crear un carrito si no existe
            }
            showCartProducts(); // Mostrar los productos del carrito
        });

        // Función para actualizar la cantidad del producto en el carrito
        async function updateProductQuantity(productId, change) {
            const cartId = getCartId();
            if (!cartId) {
                alert('No hay un carrito seleccionado.');
                return;
            }

            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: change }),
                });

                const result = await response.json();
                console.log(result); // Aquí puedes manejar la respuesta, por ejemplo, actualizar la UI
                if (result.message === 'Carrito vacío y eliminado') {
                    // Limpiar el almacenamiento local si el carrito se ha eliminado
                    localStorage.removeItem('cartId');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Función para crear un nuevo carrito y guardar su ID
        async function createCart() {
            try {
                const response = await fetch('/api/carts/', {
                    method: 'POST',
                });

                const result = await response.json();
                setCartId(result._id); // Guardar el ID del nuevo carrito
                console.log('Carrito creado:', result);
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Inicializar carrito al cargar la página
        document.addEventListener('DOMContentLoaded', () => {
            // Verificar si ya hay un carrito en el almacenamiento local
            if (!getCartId()) {
                createCart(); // Crear un carrito si no existe
            }
        });
    </script>
</head>
<body>
    <div>
        <h1>Lista de Productos</h1>
        <table>
            <thead>
                <tr>
                    <th>Título</th>
                    <th>Descripción</th>
                    <th>Código</th>
                    <th>Precio</th>
                    <th>Stock</th>
                    <th>Categoría</th>
                    <th>Thumbnail</th>
                    <th>Status</th>
                    <th>Acciones</th> <!-- Nueva columna para botones -->
                </tr>
            </thead>
            <tbody>
                {{#each products}}
                    <tr>
                        <td>{{this.title}}</td>
                        <td>{{this.description}}</td>
                        <td>{{this.code}}</td>
                        <td>{{this.price}}</td>
                        <td>{{this.stock}}</td>
                        <td>{{this.category}}</td>
                        <td><img src="{{this.thumbnails}}" alt="Thumbnail" style="max-width: 100px; max-height: 100px;"></td>
                        <td>{{this.status}}</td>
                        <td>
                            <button onclick="updateProductQuantity('{{this._id}}', 1)">+</button>
                            <button onclick="updateProductQuantity('{{this._id}}', -1)">-</button>
                        </td>
                    </tr>
                {{/each}}
            </tbody>
        </table>
         <h2>Productos en el Carrito</h2>
        <table>
            <thead>
                <tr>
                    <th>Título</th>
                    <th>Descripción</th>
                    <th>Código</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                </tr>
            </thead>
            <tbody id="cart-products">
                <!-- Los productos del carrito se llenarán aquí -->
            </tbody>
        </table>
    </div>
</body>
</html>
